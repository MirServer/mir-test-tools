name: mir-test-tools
adopt-info: mir-test-tools
summary: Mir test scripts and applications
description: Mir test scripts and applications
confinement: strict
grade: stable
base: core18

environment:
  LC_ALL: C.UTF-8
  XCURSOR_PATH:    $SNAP/icons
#  # XDG config
  XDG_RUNTIME_DIR: $SNAP_DATA/.xdg_runtime_dir
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config
  # Prep for Mir
  MIR_CLIENT_PLATFORM_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir/client-platform
  MIR_SERVER_PLATFORM_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir/server-platform
  # Prep EGL
  __EGL_VENDOR_LIBRARY_DIRS: $SNAP/etc/glvnd/egl_vendor.d:$SNAP/usr/share/glvnd/egl_vendor.d

apps:
  basic-test:
    command: desktop-launch mir_demo_server --test-client mir_demo_client_basic --test-timeout 1
    slots:
      - mir
      - wayland
    plugs:
      - opengl

  smoke-test:
    command: desktop-launch mir-smoke-test-runner
    slots:
      - mir
      - wayland
    plugs:
      - opengl

  stress-test:
    command: desktop-launch mir_demo_server --test-client mir_stress
    slots:
      - mir
      - wayland
    plugs:
      - opengl

  # SDL2 example
  sdl2-test:
    command: desktop-launch mir_demo_server --test-client neverputt
    slots:
      - mir
      - wayland
    plugs:
      - opengl
      - pulseaudio
    environment:
      # Alsa config
      ALSA_CONFIG_DIR: $SNAP/usr/share/alsa
      ALSA_CONFIG_PATH: ${SNAP}/usr/share/alsa
      ALSA_MIXER_SIMPLE: ${SNAP}/usr/share/alsa
      # SDL config
      PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}:${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio
      NEVERBALL_DATA: $SNAP/usr/share/games/neverball/

  # Qt example
  qt-test:
    command: desktop-launch mir_demo_server --test-client $SNAP/qml/spinning-rect.sh
    slots:
      - mir
      - wayland
    plugs:
      - opengl
    environment:
      # Prep for Qt wayland
      QT_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/
      QT_QPA_PLATFORM_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/platforms/
      QML2_IMPORT_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/qml

  # GTK3+ example
  gtk3-test:
    command: desktop-launch mir_demo_server --test-client $SNAP/gtkapp.sh
    slots:
      - mir
      - wayland
    plugs:
      - opengl
    environment:
      PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}

#  # *** These don't work very well ***
#  performance-test:
#    command: mir_performance_tests --gtest_filter=-GLMark* # glmark seems to hard-code it's data path
#    slots:
#      - mir
#      - wayland
#    plugs:
#      - opengl
#    environment:
#      LC_ALL: C.UTF-8
#      XCURSOR_PATH:    $SNAP/icons
#      # XDG config
#      XDG_RUNTIME_DIR: $SNAP_DATA/.xdg_runtime_dir
#      XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
#      XDG_CONFIG_HOME: $SNAP_DATA/.config
#      XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb
#      XDG_CONFIG_DIRS: ${SNAP}/etc/xdg:$XDG_CONFIG_DIRS
#      XDG_DATA_DIRS: ${SNAP}/usr/share:$XDG_DATA_DIRS
#      XDG_DATA_HOME: ${SNAP}/usr/share
#      # Prep for Mir
#      MIR_CLIENT_PLATFORM_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir/client-platform
#      MIR_SERVER_PLATFORM_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir/server-platform
#      MIR_SERVER_CONSOLE_PROVIDER: vt
#      MIR_SERVER_VT: 6
#      # Prep EGL
#      __EGL_VENDOR_LIBRARY_DIRS: $SNAP/etc/glvnd/egl_vendor.d:$SNAP/usr/share/glvnd/egl_vendor.d

  # I don't know why, but having this here makes things work
  dummy:
    command: ls
    daemon: simple
    restart-condition: never

  # For experimenting
  bash:
    command: desktop-launch bash
    slots:
      - mir
      - wayland
    plugs:
      - opengl
      - pulseaudio
    environment:
      # Prep for Qt wayland
      QT_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/
      QT_QPA_PLATFORM_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/platforms/
      QML2_IMPORT_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/qml
      # neverputt
      PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}:${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio
      NEVERBALL_DATA: $SNAP/usr/share/games/neverball/

# For GTK3+
plugs:
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

parts:
  ppa-mir:
    plugin: nil
    override-pull: |
      sudo apt --assume-yes install software-properties-common
      sudo add-apt-repository -yu ppa:mir-team/dev
      # We shouldn't need to install stuff here, but it seems to fix intermittent build failures
      sudo apt --assume-yes install mir-test-tools mir-graphics-drivers-desktop
      sudo apt clean
      snapcraftctl pull

  mir-test-tools:
    after: [ppa-mir]
    plugin: nil
    override-pull: |
      snapcraftctl pull
      snapcraftctl set-version $(LANG=C apt-cache policy mir-test-tools | sed -rne 's/^\s+Candidate:\s+([^-]*)-.+$/\1/p')
    stage-packages:
    - fonts-freefont-ttf
    - mir-graphics-drivers-desktop
    - mir-test-tools
    - xmir
    - xwayland
    - glmark2-es2
    - glmark2-data
    - glmark2-es2-wayland

  icons:
    plugin: nil
    stage-packages: [dmz-cursor-theme]
    organize:
      usr/share/icons/DMZ-White: icons/default
    prime:
     - icons/default

  mesa:
    plugin: nil
    stage-packages:
      - libgl1-mesa-dri

  sdl2-apps:
    plugin: nil
    stage-packages:
      - libsdl2-2.0-0
      - libsdl2-image-2.0-0
      - libsdl2-mixer-2.0-0
      - libsdl2-net-2.0-0
      - libpulse0
      # SDL2 games
      - neverputt

  qmldemo:
    plugin: dump
    source: qmldemo
    stage-packages:
      - qmlscene
      - qtwayland5
      - qml-module-qtquick2
    organize:
      spinning-rect.qml: qml/spinning-rect.qml
      spinning-rect.sh: qml/spinning-rect.sh

  snapcraft-desktop-helpers:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    make-parameters: ["FLAVOR=gtk3"]
    build-packages:
      - build-essential
      - libgtk-3-dev
    override-build: |
      snapcraftctl build
      # desktop-launch doesn't handle running without a user session very well, this avoids slow startup here
      sed --in-place s'/^  needs_update=true/:/' $SNAPCRAFT_PART_INSTALL/bin/desktop-launch

  gtk3-apps:
    plugin: nil
    stage-packages:
      - gnome-sudoku

  gtk3app:
    plugin: dump
    source: gtk3
    organize:
      gtk3app.sh: gtk3/gtk3app.sh
